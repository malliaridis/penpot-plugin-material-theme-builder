penpot.ui.open("Material Theme Builder",`?theme=${penpot.theme}`);penpot.ui.onMessage(e=>{if(e.source=="plugin")switch(e.type){case"create-colors":{const{colors:o,ref:t}=e.data;b(o,t);break}case"create-color":{const{color:o,ref:t}=e.data;d(o,t);break}case"update-colors":{const{colors:o,ref:t}=e.data;C(o,t);break}case"update-color":{const{color:o,ref:t}=e.data;u(o,t);break}case"remove-colors":{const{colors:o,ref:t}=e.data;y(o,t);break}case"remove-color":{const{color:o,ref:t}=e.data;f(o,t);break}case"load-local-library-colors":{m(),M();break}case"update-current-page-colors":{const{mappings:o,ref:t}=e.data;P(o,t);break}case"update-current-selection-colors":{const{mappings:o,ref:t}=e.data;v(o,t);break}case"delete-library-theme":{const{themeName:o,ref:t}=e.data;k(o,t);break}}});penpot.on("selectionchange",()=>{const e=penpot.selection;penpot.ui.sendMessage({source:"penpot",type:"selection-changed",data:{shapes:e}})});penpot.on("themechange",e=>{penpot.ui.sendMessage({source:"penpot",type:"theme-changed",data:{theme:e}})});function b(e,o){e.forEach(t=>{d(t,o)})}function d(e,o){const t=penpot.library.local.createColor();h(t,e),penpot.ui.sendMessage({source:"penpot",type:"color-created",data:{color:t,ref:o}})}function C(e,o){e.forEach(t=>{u(t,o)})}function u(e,o){const t=penpot.library.local.colors.find(r=>r.id===e.id);if(!t){console.warn(`Color with ID ${e.id} not found.`);return}h(t,e),penpot.ui.sendMessage({source:"penpot",type:"color-updated",data:{color:t,ref:o}})}function y(e,o){e.forEach(t=>{f(t,o)})}function f(e,o){console.warn("Penpot API does not support removals. Skipping..."),penpot.ui.sendMessage({source:"penpot",type:"color-removed",data:{color:e,ref:o}})}function h(e,o){const t=o.name?o.name:e.name,r=o.path?o.path:e.path;o.color&&(e.color=o.color),o.opacity&&(e.opacity=o.opacity),o.gradient&&(e.gradient=o.gradient),o.image&&(e.image=o.image),e.name=t,e.path=r}function m(){penpot.ui.sendMessage({source:"penpot",type:"library-colors-fetched",data:{colors:penpot.library.local.colors}})}function M(){penpot.ui.sendMessage({source:"penpot",type:"all-library-colors-fetched",data:{colors:g().flatMap(e=>e.colors)}})}function k(e,o){console.log(`Pretending to delete all assets related to ${e} with ${o.toString()} reference.`),console.warn("Operation not supported by penpot plugin.")}function P(e,o){if(!penpot.currentPage){console.error("Current page not available.");return}w(penpot.currentPage,e,o)}function v(e,o){const t=penpot.selection;if(t.length==0){console.error("Current selection is empty.");return}s(t,e,o)}function w(e,o,t){const r=e.findShapes();s(r,o,t)}function s(e,o,t){penpot.ui.sendMessage({source:"penpot",type:"shape-color-mapping-started",data:{size:e.length,ref:t}}),e.forEach(r=>{const l=r.fills;let a=!1;if(!A(l)){penpot.ui.sendMessage({source:"penpot",type:"shape-colors-updated",data:{id:r.id,updated:a,ref:t}});return}r.fills=l.map(n=>{if(n.fillColorRefId){const p=o[n.fillColorRefId];if(!p)return n;const i=g().flatMap(c=>c.colors).find(c=>c.id==p.id);if(i)return a=!0,i.asFill()}return n}),penpot.ui.sendMessage({source:"penpot",type:"shape-colors-updated",data:{id:r.id,updated:a,ref:t}}),S(r)&&s(r.children,o,t)}),penpot.ui.sendMessage({source:"penpot",type:"shape-color-mapping-completed",data:{ref:t}})}function A(e){return Array.isArray(e)}function S(e){return"children"in e}function g(){return[penpot.library.local,...penpot.library.connected]}
